# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config
, pkgs
, lib
, modulesPath
, ...
}:
{
  imports = [
    (modulesPath + "/installer/scan/not-detected.nix")
  ];

  boot.initrd.availableKernelModules = [
    "xhci_pci"
    "ehci_pci"
    "usbhid"
    "nvme"
    "usb_storage"
    "sd_mod"
    "aesni_intel"
    "cryptd"
  ];
  boot.initrd.kernelModules = [ "dm-snapshot" ];
  boot.kernelModules = [ "kvm-intel" "msi-ec" ];

  boot.blacklistedKernelModules = [
    "nvidia"
    "nvidia_uvm"
    "nvidia_drm"
    "nvidia_modeset"
  ];

  boot.kernelPackages = pkgs.linuxPackages // {
      inherit (pkgs) msi-ec;
  };


  boot.extraModulePackages = with pkgs; [
      msi-ec
  ];

  boot.kernelParams = [
    "acpi_rev_override=1"
    "acpi_osi=Linux"
    "pcie_aspm=off"
    "drm.vblankoffdelay=1"
    "scsi_mod.use_blk_mq=1"
    "mem_sleep_default=deep"
  ];

  boot.binfmt.emulatedSystems = [
    "aarch64-linux"
  ];

  boot.initrd.systemd.enable = true;

  boot.initrd.luks.devices.crypted = {
    device = "/dev/disk/by-uuid/63640f50-26db-4e09-82ee-92e18b93e62e";
    allowDiscards = true;
    keyFileSize = 4096;
    keyFile = "/dev/disk/by-id/usb-General_USB_Flash_Disk_04NCZ3G8Y7ERGZRJ-0:0";
    keyFileTimeout = 3;
    bypassWorkqueues = true;
  };

  fileSystems."/" =
    {
      device = "/dev/disk/by-uuid/4a010770-8fa6-4e11-ab70-530791fac16b";
      fsType = "ext4";
    };
  fileSystems."/home" =
    {
      device = "/dev/disk/by-uuid/27e78500-e9d5-4a36-a881-be9f90fcafce";
      fsType = "ext4";
    };

  fileSystems."/boot" =
    {
      device = "/dev/disk/by-uuid/B362-9D39";
      fsType = "vfat";
      options = [ "fmask=0022" "dmask=0022" ];
    };

  swapDevices =
    [{ device = "/dev/disk/by-uuid/2b179543-e2ba-4957-bef5-8dec53849431"; }];


  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  powerManagement.cpuFreqGovernor = lib.mkDefault "powersave";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;


  hardware = {

    openrazer.enable = true;

    opengl = {
      extraPackages = with pkgs; [
        mesa
        mesa.drivers
      ];
      enable = true;
    };
    nvidia = {
      open = true;
      prime = {
        sync.enable = true;
        offload.enable = false;
        intelBusId = "PCI:0:2:0";
        nvidiaBusId = "PCI:1:0:0";
      };
      powerManagement.enable = true;
    };

  };
}
